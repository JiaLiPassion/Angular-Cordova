{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/dashboard/cache.service.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div style=\"display: block;\">\r\n  <p>db1</p>\r\n  <button (click)=\"createDb('db1')\">Create DB1</button>\r\n  <button (click)=\"dropDb('db1')\">Drop DB1</button>\r\n  <button (click)=\"saveString('db1')\">Save String</button>\r\n  <button (click)=\"getString('db1')\">Get Cached String</button>\r\n  {{cachedString1}}\r\n  <input type=\"file\" (change)=\"onFileChanged('db1', $event)\">\r\n  <button (click)=\"getBlob('db1')\">Get cached Blob</button>\r\n  <ng-container *ngIf=\"cachedImg1\">\r\n    <img id=\"myimage\" [src]='cachedImg1' />\r\n  </ng-container>\r\n</div>\r\n<div>\r\n  <p>db2</p>\r\n  <button (click)=\"createDb('db2')\">Create DB2</button>\r\n  <button (click)=\"dropDb('db2')\">Drop DB2</button>\r\n  <button (click)=\"saveString('db2')\">Save String</button>\r\n  <button (click)=\"getString('db2')\">Get Cached String</button>\r\n  {{cachedString2}}\r\n  <input type=\"file\" (change)=\"onFileChanged('db2', $event)\">\r\n  <button (click)=\"getBlob('db2')\">Get cached Blob</button>\r\n  <ng-container *ngIf=\"cachedImg2\">\r\n    <img id=\"myimage\" [src]='cachedImg2' />\r\n  </ng-container>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { CachingService } from './cache.service';\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n  const byteString = atob(dataURI.split(',')[1]);\r\n  const arrayBuffer = new ArrayBuffer(byteString.length);\r\n  const intArray = new Uint8Array(arrayBuffer);\r\n\r\n  for (let i = 0; i < byteString.length; i++) {\r\n    intArray[i] = byteString.charCodeAt(i);\r\n  }\r\n  return new Blob([intArray], { type: mimeString });\r\n}\r\n\r\nfunction blobToDataURI(blob): Promise<string> {\r\n  return new Promise((res, rej) => {\r\n    const reader = new FileReader();\r\n    reader.onload = e => {\r\n      res(e.target.result as string);\r\n    };\r\n    reader.onerror = e => {\r\n      rej(e);\r\n    };\r\n    reader.readAsDataURL(blob);\r\n  });\r\n}\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  cachedString1: string;\r\n  cachedString2: string;\r\n  cachedImg1: any;\r\n  cachedImg2: any;\r\n  constructor(private cachingService: CachingService, private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  saveString(db) {\r\n    this.cachingService.cacheRequest(db, 'string', 'test');\r\n  }\r\n\r\n  async getString(db) {\r\n    if (db === 'db1') {\r\n      this.cachedString1 = await this.cachingService.getCachedRequest(db, 'string');\r\n    } else {\r\n      this.cachedString2 = await this.cachingService.getCachedRequest(db, 'string');\r\n    }\r\n  }\r\n\r\n  async getBlob(db) {\r\n    if (db === 'db1') {\r\n      this.cachedImg1 = this.sanitizer.bypassSecurityTrustUrl(`${await this.cachingService.getCachedRequest(db, 'blob')}`);\r\n    } else {\r\n      this.cachedImg2 = this.sanitizer.bypassSecurityTrustUrl(`${await this.cachingService.getCachedRequest(db, 'blob')}`);\r\n    }\r\n  }\r\n\r\n  async createDb(db) {\r\n    this.cachingService.initStorage(db);\r\n  }\r\n\r\n  async dropDb(db) {\r\n    this.cachingService.dropStorage(db);\r\n  }\r\n\r\n  onFileChanged(db, event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n      const fr = new FileReader();\r\n      fr.onload = (evt) => {\r\n        const base64: any = evt.target.result;\r\n        this.cachingService.cacheRequest(db, 'blob', base64);\r\n      };\r\n      fr.readAsDataURL(file);\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { CachingService } from './components/dashboard/cache.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-cordova';\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\r\nimport * as CordovaSQLiteDriver from 'localforage-cordovasqlitedriver';\r\nimport * as localforage from 'localforage';\r\n\r\n// Expire time in seconds\r\nconst TTL = 60 * 60;\r\n// Key to identify only cached API data\r\nconst CACHE_KEY = '_mycached_';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CachingService {\r\n  stores: any = {};\r\n  constructor() {\r\n    localforage.defineDriver(CordovaSQLiteDriver).then(() => {\r\n      return localforage.setDriver([\r\n        // tslint:disable-next-line:indent\r\n        // Try setting cordovaSQLiteDriver if available,\r\n        CordovaSQLiteDriver._driver,\r\n        // otherwise use one of the default localforage drivers as a fallback.\r\n        // This should allow you to transparently do your tests in a browser\r\n        localforage.INDEXEDDB,\r\n        localforage.WEBSQL,\r\n        localforage.LOCALSTORAGE\r\n      ]);\r\n    });\r\n  }\r\n\r\n  // Setup Ionic Storage\r\n  async initStorage(name: string) {\r\n    this.stores[name] = await localforage.createInstance({ name });\r\n  }\r\n\r\n  // Store request data\r\n  cacheRequest(name, url, data): Promise<any> {\r\n    const validUntil = (new Date().getTime()) + TTL * 1000;\r\n    url = `${CACHE_KEY}${url}`;\r\n    return this.stores[name].setItem(url, { validUntil, data });\r\n  }\r\n\r\n  // Try to load cached data\r\n  async getCachedRequest(name, url): Promise<any> {\r\n    const currentTime = new Date().getTime();\r\n    url = `${CACHE_KEY}${url}`;\r\n\r\n    const storedValue = await this.stores[name].getItem(url);\r\n\r\n    if (!storedValue) {\r\n      return null;\r\n    } else if (storedValue.validUntil < currentTime) {\r\n      await this.stores[name].removeItem(url);\r\n      return null;\r\n    } else {\r\n      return storedValue.data;\r\n    }\r\n  }\r\n\r\n  // Remove all cached data & files\r\n  async dropStorage(name: string) {\r\n    this.stores[name].dropInstance();\r\n    this.stores[name] = undefined;\r\n  }\r\n\r\n  // Example to remove one cached URL\r\n  async invalidateCacheEntry(name, url) {\r\n    url = `${CACHE_KEY}${url}`;\r\n    await this.stores[name].removeItem(url);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { CachingService } from './components/dashboard/cache.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [CachingService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DashboardComponent } from '../app/components/dashboard/dashboard.component'\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: DashboardComponent\r\n\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nconst bootstrap = () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule);\r\n};\r\nif (typeof window['cordova'] !== 'undefined') {\r\n  document.addEventListener('deviceready', () => {\r\n    bootstrap();\r\n  }, false);\r\n} else {\r\n  bootstrap();\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}